#+TITLE: NACE lookup overview
#+SETUPFILE: setupfile.org

* About
** Value proposition
Every project that the Irish Local enterprise office (LEO) works with needs to be assigned their corresponding NACE/CPA code. As of 2023 NACE/CPA doesn't have a good interface and LEO employees are spending many hours on the lookup that they have to search it manually in Excel files.

Because of legal reasons, it's important to get the correct NACE/CPA codes, otherwise there may be fines.

Best-case scenario for the LEOs would be to give the entrepreneurs easy to use lookup tool, so they could find the codes themselves and then the LEO employees would only check them to make sure they are correct.

*** Patricia's comment
#+begin_quote
  Aim was to get business founder to select the NACE L4 code for their primary business activity. LEO said founders cannot do it, very few people in the LEO can even get it right.

  I realised that CPA L6 should help because founder/LEO could search for the business’s main product/service which is easier to understand that ‘Main biz activity’.

  But L6 turns out to be poorly worded shit just like L4 and lacks good keywords. We set out to import other mapped classification titles to build a set of keywords to improve search. But only managed about a 15% improvement.

  Then I discovered UNSPSC and GPC go to a really granular level of detail, right down to the search keyword terms we wanted but there are no mappings.
#+end_quote

** Standalone project
That is a feature we need for BizMentor. However since many other people suffer from this very problem, it deserves to be a standalone project that we can charge for.

*** Patricia's comment
#+begin_quote
  All the effort involved in building what ought to have been simple meant I have had to do a lot of research and speed read a number of reports. That made me aware that this problem is worldwide with all the classifications created and maintained by NGO and GOs.

  So if we can, in time get this mapping really accurate by adding the keywords that ought to have been added in the first place, and mapping those keywords to the lowest levels of the various classifications then this should be a tool that is very useful to many people worldwide - government organisations, businesses, accountants, company formation agents, tax advisors, etc.
#+end_quote

** Issues
*** Title, desc and notes vs keywords
Let's say we want to buy a door handle. We type ~handle~ into the search. One of the search results is /Operating systems, packaged/.

[[./assets/search-false-positive.png]]

What? Why? Well, it's because both CPA and CPC descriptions contains the word /handles/ (as a verb rather than noun). For instance the CPC description:

/operating systems packaged subclass published lowlevel software which {{{highlight(handles)}}} interface to peripheral hardware schedules tasks allocates storage presents default interface to user when no application program is running all client network operating systems/

That's an example of what a description looks like. It contains some keywords, but it also contains words that are not keywords specific to given item, but which may act as keywords to a completely different item.

Some of these are even negated (for instance in /reaction engines, {{{highlight(excluding turbo-jets)}}}/). Some of these can be filtered out, but not all of them.

Ideally out of this description we'd get something like:

#+begin_src clojure
  ["operating systems" "lowlevel software" "hardware interface"
   "storage allocation" "client network operating systems"]
#+end_src

*** Not enough keywords contained in NACE/CPA titles
NACE/CPA is heavily geared towards agriculture, which unfortunately doesn't suit are users who are mostly into manufacturing and services.

So while there's a category for camel spunk with keywords to match /dromaderies, llamas, alpacas, guanacos, vicunas and other camelids/, good luck finding guitar, pan or even shirt.

*** Mapping to other specifications is rarely close to 1:1
Apart from CPC, which maps to CPA in a relationship close to 1:1,

*** Not enough keywords for good probabilistic matching
False positives again.

** Stats
- 21 L1 items.
- 576 L4 items.
- 1716 L6 items.

** Related classifications
*** PRODCOM
*** GPC
*** UNSPSC
*** HS
*** CN

* Implementation

* Tasks
** Manual matching
*** TODO Extend L4 items with extra
- Currently we only use CPA extras for L4 items.

*** TODO Check the data is accurate

*** TODO Script for adding keywords
- L4 items as well.

*** TODO Add keywords field manually

** Search improvements
*** TODO Apply search terms separately
- blue balls -> first apply blue, then balls to the result.
- Highlight full match in a different colour.

*** TODO Browse L6 -> parent L4 & L4 -> all children

*** TODO SG/PL in JS
https://www.npmjs.com/package/inflection

*** TODO Scoring
- Sort L4 categories by total score (direct heading match + total L6 matches weight).
- Direct match ("operating system").
- Number of matches (CPA title, CN desc).
- Weight of matches (title > desc).
- Maybe show which classification matches(?) On the right-hand side.
** Probabilistic matching
- Do we still care about UNSPSC / GPC?

*** TODO Try probabilistic matching again
- Revive UNSPSC from Git history.
- GPC.

** Production
*** TODO Separate production build
- Depends on the size.
- autocomplete.json vs autocomplete-inspect.json loaded for ~?inspect~.

*** TODO Capture user searches
- So we can add missing keywords.

*** TODO Consider adding tests

LEO will need CPA in future, we want it in the app from day one if possible to allow for data analysis to improve financial projections. Prodcom is likely to come into play in future years. CN is not essential in day one of app but would really help as it would ensure accurate Tax payment projections.

———


But the make/break will be determined by how accurate we can get the keywords. We will probably have to take insurance out against providing wrong answers which leads to people over/underpaying tax or mis-declaring goods so I will be looking for ways to reduce liability - legal terms of use, once we suggest the answers we should make users review the hierarchy to confirm accuracy, anything to reduce our liability, etc. But even that won’t be enough in court unless we have made “best efforts” To get accurate keywords.
